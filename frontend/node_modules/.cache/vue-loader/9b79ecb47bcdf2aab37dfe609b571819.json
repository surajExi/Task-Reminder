{"remainingRequest":"D:\\Projects\\Task-Reminder\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Task-Reminder\\frontend\\src\\vue-components\\ListTask.vue?vue&type=style&index=0&id=3fbe2f2c&lang=scss&scoped=true&","dependencies":[{"path":"D:\\Projects\\Task-Reminder\\frontend\\src\\vue-components\\ListTask.vue","mtime":1585823111444},{"path":"D:\\Projects\\Task-Reminder\\frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\Projects\\Task-Reminder\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Projects\\Task-Reminder\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Projects\\Task-Reminder\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Task-Reminder\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Task-Reminder\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.todo__done {\n    text-decoration: line-through !important;\n\n}\n\n.no_border_left_right {\n    border-left: 0px;\n    border-right: 0px;\n}\n\n.flat_form {\n    border-radius: 0px;\n}\n\n.mrb-10 {\n    margin-bottom: 10px;\n}\n\n.addon-left {\n    background-color: none !important;\n    border-left: 0px !important;\n    cursor: pointer !important;\n}\n\n.addon-right {\n    background-color: none !important;\n    border-right: 0px !important;\n}\n",{"version":3,"sources":["ListTask.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ListTask.vue","sourceRoot":"src/vue-components","sourcesContent":["<style lang=\"scss\" scoped>\r\n    .todo__done {\r\n        text-decoration: line-through !important;\r\n\r\n    }\r\n\r\n    .no_border_left_right {\r\n        border-left: 0px;\r\n        border-right: 0px;\r\n    }\r\n\r\n    .flat_form {\r\n        border-radius: 0px;\r\n    }\r\n\r\n    .mrb-10 {\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .addon-left {\r\n        background-color: none !important;\r\n        border-left: 0px !important;\r\n        cursor: pointer !important;\r\n    }\r\n\r\n    .addon-right {\r\n        background-color: none !important;\r\n        border-right: 0px !important;\r\n    }\r\n</style>\r\n<template>\r\n    <div v-bind:show=\"tasks.length>0\" class=\"col align-self-center\">\r\n        <div class=\"form-row align-items-center\" v-for=\"tsk in tasks\">\r\n\r\n            <div class=\"col-auto my-1\" style=\"display:inline-flex;\">\r\n                <input class=\"form-control col-md-3\" type=\"text\" disabled  v-model=\"tsk.task\" value=\"tsk.task\"/>\r\n                <div class=\"input-group mb-3 todo__row\">\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\">\r\n                            <input type=\"checkbox\"\r\n                                   v-model=\"tsk.iscompleted\"\r\n                                   :checked=\"tsk.iscompleted\"\r\n                                   :value=\"tsk.iscompleted\"\r\n                                   v-on:change=\"updateTaskToComplete(tsk)\"\r\n                                   title=\"Mark as done?\" />\r\n                        </span>\r\n                    </div>\r\n\r\n                    <input type=\"text\"\r\n                           class=\"form-control\"\r\n                           :class=\"tsk.iscompleted?'todo__done':''\"\r\n                           :disabled=\"tsk.iscompleted\"\r\n                           v-model=\"tsk.taskdetails\"\r\n                           @keyup.enter=\"updateTask(tsk)\" />\r\n                    <div class=\"input-group-append\">\r\n                        <div class=\"input-group-text\">\r\n                            <span class=\"input-group-addon addon-left\"\r\n                                  title=\"Delete task?\"\r\n                                  v-on:click=\"deleteTask(tsk.id)\">\r\n                                X\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"alert alert-primary todo__row\"\r\n             v-show=\"tasks.length==0 && doneLoading\">Add some tasks..</div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import bus from \"./../bus.js\";\r\n    export default {\r\n        data() {\r\n            return {\r\n                tasks: [],\r\n                doneLoading: true\r\n            };\r\n        },\r\n        created: function () {\r\n            this.fetchTasks();\r\n            this.listenToEvents();\r\n        },\r\n        watch: {\r\n            $route: function () {\r\n                let self = this;\r\n                self.doneLoading = false;\r\n                self.fetchData().then(function () {\r\n                    self.doneLoading = true;\r\n                });\r\n            }\r\n        },\r\n        methods: {\r\n            fetchTasks() {\r\n                this.$http.get(\"/api/tasks/taskList\").then(response => {\r\n                    this.tasks = response.data;\r\n                });\r\n            },\r\n            updateTaskToComplete(task) {\r\n                let id = task.id;\r\n                this.$http\r\n                    .put('/api/tasks/updateTaskToComplete/' + id, task)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            },\r\n            updateTask(task) {\r\n                console.log(\"Gala lo\");\r\n                let id = task.id;\r\n                this.$http\r\n                    .put('/api/tasks/updateTask/' + id, task)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            },\r\n            deleteTask(id) {\r\n                this.$http.delete('/api/tasks/deleteTask/' + id).then(response => {\r\n                    this.fetchTasks();\r\n                });\r\n            },\r\n            listenToEvents() {\r\n                bus.$on(\"refreshTask\", $event => {\r\n                    this.fetchTasks(); //update todo\r\n                });\r\n            }\r\n        }\r\n    };\r\n</script>"]}]}