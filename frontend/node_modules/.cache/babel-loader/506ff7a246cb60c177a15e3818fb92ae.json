{"remainingRequest":"D:\\Projects\\Task-Reminder\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\Task-Reminder\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\Task-Reminder\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Task-Reminder\\frontend\\src\\vue-components\\ListTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Task-Reminder\\frontend\\src\\vue-components\\ListTask.vue","mtime":1585823111444},{"path":"D:\\Projects\\Task-Reminder\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Task-Reminder\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\Task-Reminder\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Task-Reminder\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport bus from \"./../bus.js\";\nexport default {\n  data() {\n    return {\n      tasks: [],\n      doneLoading: true\n    };\n  },\n\n  created: function () {\n    this.fetchTasks();\n    this.listenToEvents();\n  },\n  watch: {\n    $route: function () {\n      let self = this;\n      self.doneLoading = false;\n      self.fetchData().then(function () {\n        self.doneLoading = true;\n      });\n    }\n  },\n  methods: {\n    fetchTasks() {\n      this.$http.get(\"/api/tasks/taskList\").then(response => {\n        this.tasks = response.data;\n      });\n    },\n\n    updateTaskToComplete(task) {\n      let id = task.id;\n      this.$http.put('/api/tasks/updateTaskToComplete/' + id, task).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    updateTask(task) {\n      console.log(\"Gala lo\");\n      let id = task.id;\n      this.$http.put('/api/tasks/updateTask/' + id, task).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    deleteTask(id) {\n      this.$http.delete('/api/tasks/deleteTask/' + id).then(response => {\n        this.fetchTasks();\n      });\n    },\n\n    listenToEvents() {\n      bus.$on(\"refreshTask\", $event => {\n        this.fetchTasks(); //update todo\n      });\n    }\n\n  }\n};",{"version":3,"sources":["ListTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA,OAAA,GAAA,MAAA,aAAA;AACA,eAAA;AACA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAAA;AAIA,GANA;;AAOA,EAAA,OAAA,EAAA,YAAA;AACA,SAAA,UAAA;AACA,SAAA,cAAA;AACA,GAVA;AAWA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,YAAA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,WAAA,GAAA,KAAA;AACA,MAAA,IAAA,CAAA,SAAA,GAAA,IAAA,CAAA,YAAA;AACA,QAAA,IAAA,CAAA,WAAA,GAAA,IAAA;AACA,OAFA;AAGA;AAPA,GAXA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,GAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,qBAAA,EAAA,IAAA,CAAA,QAAA,IAAA;AACA,aAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,OAFA;AAGA,KALA;;AAMA,IAAA,oBAAA,CAAA,IAAA,EAAA;AACA,UAAA,EAAA,GAAA,IAAA,CAAA,EAAA;AACA,WAAA,KAAA,CACA,GADA,CACA,qCAAA,EADA,EACA,IADA,EAEA,IAFA,CAEA,QAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,OAJA,EAKA,KALA,CAKA,KAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OAPA;AAQA,KAhBA;;AAiBA,IAAA,UAAA,CAAA,IAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA;AACA,UAAA,EAAA,GAAA,IAAA,CAAA,EAAA;AACA,WAAA,KAAA,CACA,GADA,CACA,2BAAA,EADA,EACA,IADA,EAEA,IAFA,CAEA,QAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,OAJA,EAKA,KALA,CAKA,KAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OAPA;AAQA,KA5BA;;AA6BA,IAAA,UAAA,CAAA,EAAA,EAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,2BAAA,EAAA,EAAA,IAAA,CAAA,QAAA,IAAA;AACA,aAAA,UAAA;AACA,OAFA;AAGA,KAjCA;;AAkCA,IAAA,cAAA,GAAA;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,aAAA,EAAA,MAAA,IAAA;AACA,aAAA,UAAA,GADA,CACA;AACA,OAFA;AAGA;;AAtCA;AApBA,CAAA","sourcesContent":["<style lang=\"scss\" scoped>\r\n    .todo__done {\r\n        text-decoration: line-through !important;\r\n\r\n    }\r\n\r\n    .no_border_left_right {\r\n        border-left: 0px;\r\n        border-right: 0px;\r\n    }\r\n\r\n    .flat_form {\r\n        border-radius: 0px;\r\n    }\r\n\r\n    .mrb-10 {\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .addon-left {\r\n        background-color: none !important;\r\n        border-left: 0px !important;\r\n        cursor: pointer !important;\r\n    }\r\n\r\n    .addon-right {\r\n        background-color: none !important;\r\n        border-right: 0px !important;\r\n    }\r\n</style>\r\n<template>\r\n    <div v-bind:show=\"tasks.length>0\" class=\"col align-self-center\">\r\n        <div class=\"form-row align-items-center\" v-for=\"tsk in tasks\">\r\n\r\n            <div class=\"col-auto my-1\" style=\"display:inline-flex;\">\r\n                <input class=\"form-control col-md-3\" type=\"text\" disabled  v-model=\"tsk.task\" value=\"tsk.task\"/>\r\n                <div class=\"input-group mb-3 todo__row\">\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\">\r\n                            <input type=\"checkbox\"\r\n                                   v-model=\"tsk.iscompleted\"\r\n                                   :checked=\"tsk.iscompleted\"\r\n                                   :value=\"tsk.iscompleted\"\r\n                                   v-on:change=\"updateTaskToComplete(tsk)\"\r\n                                   title=\"Mark as done?\" />\r\n                        </span>\r\n                    </div>\r\n\r\n                    <input type=\"text\"\r\n                           class=\"form-control\"\r\n                           :class=\"tsk.iscompleted?'todo__done':''\"\r\n                           :disabled=\"tsk.iscompleted\"\r\n                           v-model=\"tsk.taskdetails\"\r\n                           @keyup.enter=\"updateTask(tsk)\" />\r\n                    <div class=\"input-group-append\">\r\n                        <div class=\"input-group-text\">\r\n                            <span class=\"input-group-addon addon-left\"\r\n                                  title=\"Delete task?\"\r\n                                  v-on:click=\"deleteTask(tsk.id)\">\r\n                                X\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"alert alert-primary todo__row\"\r\n             v-show=\"tasks.length==0 && doneLoading\">Add some tasks..</div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import bus from \"./../bus.js\";\r\n    export default {\r\n        data() {\r\n            return {\r\n                tasks: [],\r\n                doneLoading: true\r\n            };\r\n        },\r\n        created: function () {\r\n            this.fetchTasks();\r\n            this.listenToEvents();\r\n        },\r\n        watch: {\r\n            $route: function () {\r\n                let self = this;\r\n                self.doneLoading = false;\r\n                self.fetchData().then(function () {\r\n                    self.doneLoading = true;\r\n                });\r\n            }\r\n        },\r\n        methods: {\r\n            fetchTasks() {\r\n                this.$http.get(\"/api/tasks/taskList\").then(response => {\r\n                    this.tasks = response.data;\r\n                });\r\n            },\r\n            updateTaskToComplete(task) {\r\n                let id = task.id;\r\n                this.$http\r\n                    .put('/api/tasks/updateTaskToComplete/' + id, task)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            },\r\n            updateTask(task) {\r\n                console.log(\"Gala lo\");\r\n                let id = task.id;\r\n                this.$http\r\n                    .put('/api/tasks/updateTask/' + id, task)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            },\r\n            deleteTask(id) {\r\n                this.$http.delete('/api/tasks/deleteTask/' + id).then(response => {\r\n                    this.fetchTasks();\r\n                });\r\n            },\r\n            listenToEvents() {\r\n                bus.$on(\"refreshTask\", $event => {\r\n                    this.fetchTasks(); //update todo\r\n                });\r\n            }\r\n        }\r\n    };\r\n</script>"],"sourceRoot":"src/vue-components"}]}